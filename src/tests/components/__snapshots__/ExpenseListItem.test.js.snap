// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseListItem with expenses 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpenseListItem
    amount={20}
    createdAt={0}
    description="gum"
    id={1}
    note=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown
          to="/edit/1"
>
          <h3>
                    gum
          </h3>
</Unknown>,
        <p>
          20
           - 
          0
</p>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h3>
            gum
</h3>,
          "to": "/edit/1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "gum",
          },
          "ref": null,
          "rendered": "gum",
          "type": "h3",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            20,
            " - ",
            0,
          ],
        },
        "ref": null,
        "rendered": Array [
          20,
          " - ",
          0,
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown
            to="/edit/1"
>
            <h3>
                        gum
            </h3>
</Unknown>,
          <p>
            20
             - 
            0
</p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h3>
              gum
</h3>,
            "to": "/edit/1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "gum",
            },
            "ref": null,
            "rendered": "gum",
            "type": "h3",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              20,
              " - ",
              0,
            ],
          },
          "ref": null,
          "rendered": Array [
            20,
            " - ",
            0,
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
